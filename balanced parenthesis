#balanced paranthesis
#time complexity- big o(n)
#space complexity - big o(n) in worst case

def check_balance(expr):
    stack=[]
    for i in expr:
        if i in ('(' ,'{' , '['):
            stack.append(i)
        else:
            if not stack:
                return False
            elif ismatch(stack[-1],i)==False:
                return False
            else:
                stack.pop()
    if stack:
        return False
    else:
        return True

def ismatch(a,b):
    if (a=='(' and b==')') or (a=='{' or b=='}') or (a=="[" and b=="]"):
        return True
    else:
        return False

c=check_balance("[]()")
print(c)
